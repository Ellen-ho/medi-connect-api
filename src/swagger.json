{
  "openapi": "3.0.0",
  "info": {
    "title": "medi-connect API",
    "description": "RESTful API in Node.js with TypeScript",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:10000/api",
      "description": "Local server"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["user"],
        "summary": "Create a new user.",
        "description": "Create a new user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "example": "test"
                  },
                  "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "test"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["PATIENT", "DOCTOR"],
                    "example": "PATIENT"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success create user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["user"],
        "summary": "An existing user login.",
        "description": "An existing user login.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully login.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "token"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "79ed933e-22c2-4e9a-bf71-16086f54f3f2"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-06-18T05:23:25.231Z"
                        },
                        "displayName": {
                          "type": "string",
                          "example": "Jim"
                        },
                        "role": {
                          "type": "string",
                          "enum": ["PATIENT", "DOCTOR"],
                          "example": "PATIENT"
                        }
                      }
                    },
                    "patientId": {
                      "type": "string",
                      "example": "df5ff2e5-9d76-42ca-acfb-688267229369"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/account": {
      "get": {
        "tags": ["user"],
        "summary": "Get a user account.",
        "description": "Get a user account.",
        "responses": {
          "200": {
            "description": "Success get a user account.",
            "parameters": [
              {
                "in": "header",
                "name": "Authorization",
                "schema": {
                  "type": "string",
                  "example": "__JWT_TOKEN__"
                },
                "required": true
              }
            ],
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3eacbc28-9d7d-4fae-bf6b-bbf5c96876e6"
                    },
                    "email": {
                      "type": "string",
                      "example": "test@gmail.com"
                    },
                    "displayName": {
                      "type": "string",
                      "example": "test"
                    },
                    "role": {
                      "type": "string",
                      "enum": ["PATIENT", "DOCTOR"],
                      "example": "PATIENT"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-18T05:23:25.231Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-18T05:23:25.231Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["user"],
        "summary": "Update the specific user account.",
        "description": "Update the specific user account.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "example": "tim"
                  },
                  "password": {
                    "type": "string",
                    "example": "test"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update the specific user account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "79ed933e-22c2-4e9a-bf71-16086f54f3f2"
                    },
                    "displayName": {
                      "type": "string",
                      "example": "tim2"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/patients/profile": {
      "post": {
        "tags": ["user"],
        "summary": "Create a new patient profile.",
        "description": "Create a new patient profile.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "nullable": true,
                    "example": "avatar.jpg"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "tim"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Wang"
                  },
                  "birthDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "1995-12-31T00:00:00.000Z"
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["MALE", "FEMALE", "NON_BINARY"],
                    "example": "MALE"
                  },
                  "medicalHistory": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "diagnosis": {
                          "type": "string",
                          "enum": [
                            "HYPERTENSION",
                            "DIABETES",
                            "HYPERLIPIDEMIA",
                            "CANCER",
                            "SURGERY",
                            "OTHER"
                          ],
                          "example": "HYPERTENSION"
                        },
                        "diagnosisDetails": {
                          "type": "string",
                          "example": "Details about the diagnosis"
                        }
                      },
                      "nullable": true
                    }
                  },
                  "allergy": {
                    "type": "object",
                    "properties": {
                      "medicine": {
                        "type": "string",
                        "nullable": true,
                        "example": "Penicillin"
                      },
                      "food": {
                        "type": "string",
                        "nullable": true,
                        "example": "Peanuts"
                      },
                      "other": {
                        "type": "string",
                        "nullable": true,
                        "example": "Dust"
                      }
                    }
                  },
                  "familyHistory": {
                    "type": "array,null",
                    "items": {
                      "type": "object",
                      "properties": {
                        "relationship": {
                          "type": "string",
                          "example": "Mother"
                        },
                        "diagnosis": {
                          "type": "string",
                          "enum": [
                            "HYPERTENSION",
                            "DIABETES",
                            "HYPERLIPIDEMIA",
                            "CANCER",
                            "OTHER"
                          ],
                          "example": "HYPERTENSION"
                        },
                        "diagnosisDetails": {
                          "type": "string",
                          "example": "Details about the diagnosis"
                        }
                      },
                      "nullable": true
                    }
                  },
                  "medicineUsage": {
                    "type": "array,null",
                    "items": {
                      "type": "object",
                      "properties": {
                        "medicineName": {
                          "type": "string",
                          "example": "Aspirin"
                        },
                        "medicineDosage": {
                          "type": "number",
                          "example": 500
                        },
                        "medicineUnit": {
                          "type": "string",
                          "enum": ["MILLIGRAM", "MILLILITER"],
                          "example": "MILLIGRAM"
                        },
                        "medicineFrequency": {
                          "type": "string",
                          "enum": [
                            "ONCE_DAILY",
                            "TWICE_DAILY",
                            "THREE_TIMES_A_DAY",
                            "FOUR_TIMES_A_DAY",
                            "OTHER"
                          ],
                          "example": "ONCE_DAILY"
                        },
                        "medicineTime": {
                          "type": "string",
                          "enum": ["BEFORE_MEAL", "AFTER_MEAL", "OTHER"],
                          "example": "BEFORE_MEAL"
                        }
                      },
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create a new patient profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "df5ff2e5-9d76-42ca-acfb-688267229369"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-18T05:23:25.231Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["user"],
        "summary": "Update the specific patient profile.",
        "description": "Update the specific patient profile.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "nullable": true,
                    "example": "avatar.jpg"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "tim"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Wang"
                  },
                  "birthDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "1995-12-31T00:00:00.000Z"
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["MALE", "FEMALE", "NON_BINARY"],
                    "example": "MALE"
                  },
                  "medicalHistory": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "diagnosis": {
                          "type": "string",
                          "enum": [
                            "HYPERTENSION",
                            "DIABETES",
                            "HYPERLIPIDEMIA",
                            "CANCER",
                            "SURGERY",
                            "OTHER"
                          ],
                          "example": "HYPERTENSION"
                        },
                        "diagnosisDetails": {
                          "type": "string",
                          "example": "Details about the diagnosis"
                        }
                      },
                      "nullable": true
                    }
                  },
                  "allergy": {
                    "type": "object",
                    "properties": {
                      "medicine": {
                        "type": "string",
                        "nullable": true,
                        "example": "Penicillin"
                      },
                      "food": {
                        "type": "string",
                        "nullable": true,
                        "example": "Peanuts"
                      },
                      "other": {
                        "type": "string",
                        "nullable": true,
                        "example": "Dust"
                      }
                    }
                  },
                  "familyHistory": {
                    "type": "array,null",
                    "items": {
                      "type": "object",
                      "properties": {
                        "relationship": {
                          "type": "string",
                          "example": "Mother"
                        },
                        "diagnosis": {
                          "type": "string",
                          "enum": [
                            "HYPERTENSION",
                            "DIABETES",
                            "HYPERLIPIDEMIA",
                            "CANCER",
                            "OTHER"
                          ],
                          "example": "HYPERTENSION"
                        },
                        "diagnosisDetails": {
                          "type": "string",
                          "example": "Details about the diagnosis"
                        }
                      },
                      "nullable": true
                    }
                  },
                  "medicineUsage": {
                    "type": "array,null",
                    "items": {
                      "type": "object",
                      "properties": {
                        "medicineName": {
                          "type": "string",
                          "example": "Aspirin"
                        },
                        "medicineDosage": {
                          "type": "number",
                          "example": 500
                        },
                        "medicineUnit": {
                          "type": "string",
                          "enum": ["MILLIGRAM", "MILLILITER"],
                          "example": "MILLIGRAM"
                        },
                        "medicineFrequency": {
                          "type": "string",
                          "enum": [
                            "ONCE_DAILY",
                            "TWICE_DAILY",
                            "THREE_TIMES_A_DAY",
                            "FOUR_TIMES_A_DAY",
                            "OTHER"
                          ],
                          "example": "ONCE_DAILY"
                        },
                        "medicineTime": {
                          "type": "string",
                          "enum": ["BEFORE_MEAL", "AFTER_MEAL", "OTHER"],
                          "example": "BEFORE_MEAL"
                        }
                      },
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create a new patient profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avatar": {
                      "type": "string",
                      "nullable": true,
                      "example": "avatar.jpg"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "tim"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Wang"
                    },
                    "birthDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "1995-12-31T00:00:00.000Z"
                    },
                    "gender": {
                      "type": "string",
                      "enum": ["MALE", "FEMALE", "NON_BINARY"],
                      "example": "MALE"
                    },
                    "medicalHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "diagnosis": {
                            "type": "string",
                            "enum": [
                              "HYPERTENSION",
                              "DIABETES",
                              "HYPERLIPIDEMIA",
                              "CANCER",
                              "SURGERY",
                              "OTHER"
                            ],
                            "example": "HYPERTENSION"
                          },
                          "diagnosisDetails": {
                            "type": "string",
                            "example": "Details about the diagnosis"
                          }
                        },
                        "nullable": true
                      }
                    },
                    "allergy": {
                      "type": "object",
                      "properties": {
                        "medicine": {
                          "type": "string",
                          "nullable": true,
                          "example": "Penicillin"
                        },
                        "food": {
                          "type": "string",
                          "nullable": true,
                          "example": "Peanuts"
                        },
                        "other": {
                          "type": "string",
                          "nullable": true,
                          "example": "Dust"
                        }
                      }
                    },
                    "familyHistory": {
                      "type": "array,null",
                      "items": {
                        "type": "object",
                        "properties": {
                          "relationship": {
                            "type": "string",
                            "example": "Mother"
                          },
                          "diagnosis": {
                            "type": "string",
                            "enum": [
                              "HYPERTENSION",
                              "DIABETES",
                              "HYPERLIPIDEMIA",
                              "CANCER",
                              "OTHER"
                            ],
                            "example": "HYPERTENSION"
                          },
                          "diagnosisDetails": {
                            "type": "string",
                            "example": "Details about the diagnosis"
                          }
                        },
                        "nullable": true
                      }
                    },
                    "medicineUsage": {
                      "type": "array,null",
                      "items": {
                        "type": "object",
                        "properties": {
                          "medicineName": {
                            "type": "string",
                            "example": "Aspirin"
                          },
                          "medicineDosage": {
                            "type": "number",
                            "example": 500
                          },
                          "medicineUnit": {
                            "type": "string",
                            "enum": ["MILLIGRAM", "MILLILITER"],
                            "example": "MILLIGRAM"
                          },
                          "medicineFrequency": {
                            "type": "string",
                            "enum": [
                              "ONCE_DAILY",
                              "TWICE_DAILY",
                              "THREE_TIMES_A_DAY",
                              "FOUR_TIMES_A_DAY",
                              "OTHER"
                            ],
                            "example": "ONCE_DAILY"
                          },
                          "medicineTime": {
                            "type": "string",
                            "enum": ["BEFORE_MEAL", "AFTER_MEAL", "OTHER"],
                            "example": "BEFORE_MEAL"
                          }
                        },
                        "nullable": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-18T05:23:25.231Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-18T05:23:25.231Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["user"],
        "summary": "Get the specific patient profile.",
        "description": "Get the specific patient profile.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "targetPatientId",
            "in": "query",
            "description": "patient id for the requested profile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get the specific patient profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avatar": {
                      "type": "string",
                      "nullable": true,
                      "example": "avatar.jpg"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "tim"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Wang"
                    },
                    "birthDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "1995-12-31T00:00:00.000Z"
                    },
                    "gender": {
                      "type": "string",
                      "enum": ["MALE", "FEMALE", "NON_BINARY"],
                      "example": "MALE"
                    },
                    "medicalHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "diagnosis": {
                            "type": "string",
                            "enum": [
                              "HYPERTENSION",
                              "DIABETES",
                              "HYPERLIPIDEMIA",
                              "CANCER",
                              "SURGERY",
                              "OTHER"
                            ],
                            "example": "HYPERTENSION"
                          },
                          "diagnosisDetails": {
                            "type": "string",
                            "example": "Details about the diagnosis"
                          }
                        },
                        "nullable": true
                      }
                    },
                    "allergy": {
                      "type": "object",
                      "properties": {
                        "medicine": {
                          "type": "string",
                          "nullable": true,
                          "example": "Penicillin"
                        },
                        "food": {
                          "type": "string",
                          "nullable": true,
                          "example": "Peanuts"
                        },
                        "other": {
                          "type": "string",
                          "nullable": true,
                          "example": "Dust"
                        }
                      }
                    },
                    "familyHistory": {
                      "type": "array,null",
                      "items": {
                        "type": "object",
                        "properties": {
                          "relationship": {
                            "type": "string",
                            "example": "Mother"
                          },
                          "diagnosis": {
                            "type": "string",
                            "enum": [
                              "HYPERTENSION",
                              "DIABETES",
                              "HYPERLIPIDEMIA",
                              "CANCER",
                              "OTHER"
                            ],
                            "example": "HYPERTENSION"
                          },
                          "diagnosisDetails": {
                            "type": "string",
                            "example": "Details about the diagnosis"
                          }
                        },
                        "nullable": true
                      }
                    },
                    "medicineUsage": {
                      "type": "array,null",
                      "items": {
                        "type": "object",
                        "properties": {
                          "medicineName": {
                            "type": "string",
                            "example": "Aspirin"
                          },
                          "medicineDosage": {
                            "type": "number",
                            "example": 500
                          },
                          "medicineUnit": {
                            "type": "string",
                            "enum": ["MILLIGRAM", "MILLILITER"],
                            "example": "MILLIGRAM"
                          },
                          "medicineFrequency": {
                            "type": "string",
                            "enum": [
                              "ONCE_DAILY",
                              "TWICE_DAILY",
                              "THREE_TIMES_A_DAY",
                              "FOUR_TIMES_A_DAY",
                              "OTHER"
                            ],
                            "example": "ONCE_DAILY"
                          },
                          "medicineTime": {
                            "type": "string",
                            "enum": ["BEFORE_MEAL", "AFTER_MEAL", "OTHER"],
                            "example": "BEFORE_MEAL"
                          }
                        },
                        "nullable": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-18T05:23:25.231Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-18T05:23:25.231Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/doctors/profile": {
      "post": {
        "tags": ["user"],
        "summary": "Create a new doctor profile.",
        "description": "Create a new doctor profile.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "nullable": true,
                    "example": "avatar.jpg"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "tim"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Wang"
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["MALE", "FEMALE", "NON_BINARY"],
                    "example": "MALE"
                  },
                  "aboutMe": {
                    "type": "string",
                    "example": "I am a highly skilled doctor with over 10 years of experience in treating various illnesses."
                  },
                  "languagesSpoken": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["English", "Chinese"]
                  },
                  "specialties": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_MEDICINE",
                        "SURGERY",
                        "OBSTETRICS_AND_GYNECOLOGY",
                        "PEDIATRICS",
                        "OPHTHALMOLOGY",
                        "OTORHINOLARYNGOLOGY",
                        "DERMATOLOGY",
                        "PSYCHIATRY",
                        "DENTISTRY",
                        "ORTHOPEDICS",
                        "UROLOGY",
                        "NEUROLOGY",
                        "NEUROSURGERY",
                        "CARDIOLOGY",
                        "CARDIOTHORACIC_SURGERY",
                        "ONCOLOGY",
                        "NEPHROLOGY",
                        "PULMONOLOGY",
                        "GASTROENTEROLOGY",
                        "PULMONARY_MEDICINE"
                      ],
                      "example": ["INTERNAL_MEDICINE", "SURGERY"]
                    }
                  },
                  "careerStartDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-27T10:30:00Z"
                  },
                  "officePracticalLocation": {
                    "type": "object",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "example": "123 Main Street"
                      },
                      "line2": {
                        "type": "string",
                        "example": "Apartment 4B"
                      },
                      "city": {
                        "type": "string",
                        "example": "New York"
                      },
                      "stateProvince": {
                        "type": "string",
                        "example": "NY"
                      },
                      "postalCode": {
                        "type": "string",
                        "example": "10001"
                      },
                      "country": {
                        "type": "string",
                        "example": "United States"
                      },
                      "countryCode": {
                        "type": "string",
                        "example": "US"
                      }
                    }
                  },
                  "education": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["Medical School A", "Medical School B"]
                  },
                  "awards": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "example": [
                      "Best Doctor Award 2020",
                      "Research Excellence Award"
                    ]
                  },
                  "affiliations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "example": ["Medical Association X", "Hospital Y"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create a new doctor profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "df5ff2e5-9d76-42ca-acfb-688267229369"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2023-06-18T05:23:25.231Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["user"],
        "summary": "Update the specific doctor profile.",
        "description": "Update the specific doctor profile.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "nullable": true,
                    "example": "avatar.jpg"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "tim"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Wang"
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["MALE", "FEMALE", "NON_BINARY"],
                    "example": "MALE"
                  },
                  "aboutMe": {
                    "type": "string",
                    "example": "I am a highly skilled doctor with over 10 years of experience in treating various illnesses."
                  },
                  "languagesSpoken": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["English", "Chinese"]
                  },
                  "specialties": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_MEDICINE",
                        "SURGERY",
                        "OBSTETRICS_AND_GYNECOLOGY",
                        "PEDIATRICS",
                        "OPHTHALMOLOGY",
                        "OTORHINOLARYNGOLOGY",
                        "DERMATOLOGY",
                        "PSYCHIATRY",
                        "DENTISTRY",
                        "ORTHOPEDICS",
                        "UROLOGY",
                        "NEUROLOGY",
                        "NEUROSURGERY",
                        "CARDIOLOGY",
                        "CARDIOTHORACIC_SURGERY",
                        "ONCOLOGY",
                        "NEPHROLOGY",
                        "PULMONOLOGY",
                        "GASTROENTEROLOGY",
                        "PULMONARY_MEDICINE"
                      ],
                      "example": ["INTERNAL_MEDICINE", "SURGERY"]
                    }
                  },
                  "careerStartDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-27T10:30:00Z"
                  },
                  "officePracticalLocation": {
                    "type": "object",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "example": "123 Main Street"
                      },
                      "line2": {
                        "type": "string",
                        "example": "Apartment 4B"
                      },
                      "city": {
                        "type": "string",
                        "example": "New York"
                      },
                      "stateProvince": {
                        "type": "string",
                        "example": "NY"
                      },
                      "postalCode": {
                        "type": "string",
                        "example": "10001"
                      },
                      "country": {
                        "type": "string",
                        "example": "United States"
                      },
                      "countryCode": {
                        "type": "string",
                        "example": "US"
                      }
                    }
                  },
                  "education": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["Medical School A", "Medical School B"]
                  },
                  "awards": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "example": [
                      "Best Doctor Award 2020",
                      "Research Excellence Award"
                    ]
                  },
                  "affiliations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "example": ["Medical Association X", "Hospital Y"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update the specific doctor profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "10001"
                    },
                    "avatar": {
                      "type": "string",
                      "nullable": true,
                      "example": "avatar.jpg"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "tim"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Wang"
                    },
                    "gender": {
                      "type": "string",
                      "enum": ["MALE", "FEMALE", "NON_BINARY"],
                      "example": "MALE"
                    },
                    "aboutMe": {
                      "type": "string",
                      "example": "I am a highly skilled doctor with over 10 years of experience in treating various illnesses."
                    },
                    "languagesSpoken": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["English", "Chinese"]
                    },
                    "specialties": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "INTERNAL_MEDICINE",
                          "SURGERY",
                          "OBSTETRICS_AND_GYNECOLOGY",
                          "PEDIATRICS",
                          "OPHTHALMOLOGY",
                          "OTORHINOLARYNGOLOGY",
                          "DERMATOLOGY",
                          "PSYCHIATRY",
                          "DENTISTRY",
                          "ORTHOPEDICS",
                          "UROLOGY",
                          "NEUROLOGY",
                          "NEUROSURGERY",
                          "CARDIOLOGY",
                          "CARDIOTHORACIC_SURGERY",
                          "ONCOLOGY",
                          "NEPHROLOGY",
                          "PULMONOLOGY",
                          "GASTROENTEROLOGY",
                          "PULMONARY_MEDICINE"
                        ],
                        "example": ["INTERNAL_MEDICINE", "SURGERY"]
                      }
                    },
                    "careerStartDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T10:30:00Z"
                    },
                    "officePracticalLocation": {
                      "type": "object",
                      "properties": {
                        "line1": {
                          "type": "string",
                          "example": "123 Main Street"
                        },
                        "line2": {
                          "type": "string",
                          "example": "Apartment 4B"
                        },
                        "city": {
                          "type": "string",
                          "example": "New York"
                        },
                        "stateProvince": {
                          "type": "string",
                          "example": "NY"
                        },
                        "postalCode": {
                          "type": "string",
                          "example": "10001"
                        },
                        "country": {
                          "type": "string",
                          "example": "United States"
                        },
                        "countryCode": {
                          "type": "string",
                          "example": "US"
                        }
                      }
                    },
                    "education": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Medical School A", "Medical School B"]
                    },
                    "awards": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "nullable": true,
                      "example": [
                        "Best Doctor Award 2020",
                        "Research Excellence Award"
                      ]
                    },
                    "affiliations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "nullable": true,
                      "example": ["Medical Association X", "Hospital Y"]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-18T05:23:25.231Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-18T05:23:25.231Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/doctors/{id}/profile": {
      "get": {
        "tags": ["user"],
        "summary": "Get the specific doctor profile.",
        "description": "Get the specific doctor profile.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "doctor id for the requested profile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get the specific doctor profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "10001"
                    },
                    "avatar": {
                      "type": "string",
                      "nullable": true,
                      "example": "avatar.jpg"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "tim"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Wang"
                    },
                    "gender": {
                      "type": "string",
                      "enum": ["MALE", "FEMALE", "NON_BINARY"],
                      "example": "MALE"
                    },
                    "aboutMe": {
                      "type": "string",
                      "example": "I am a highly skilled doctor with over 10 years of experience in treating various illnesses."
                    },
                    "languagesSpoken": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["English", "Chinese"]
                    },
                    "specialties": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "INTERNAL_MEDICINE",
                          "SURGERY",
                          "OBSTETRICS_AND_GYNECOLOGY",
                          "PEDIATRICS",
                          "OPHTHALMOLOGY",
                          "OTORHINOLARYNGOLOGY",
                          "DERMATOLOGY",
                          "PSYCHIATRY",
                          "DENTISTRY",
                          "ORTHOPEDICS",
                          "UROLOGY",
                          "NEUROLOGY",
                          "NEUROSURGERY",
                          "CARDIOLOGY",
                          "CARDIOTHORACIC_SURGERY",
                          "ONCOLOGY",
                          "NEPHROLOGY",
                          "PULMONOLOGY",
                          "GASTROENTEROLOGY",
                          "PULMONARY_MEDICINE"
                        ],
                        "example": ["INTERNAL_MEDICINE", "SURGERY"]
                      }
                    },
                    "careerStartDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T10:30:00Z"
                    },
                    "officePracticalLocation": {
                      "type": "object",
                      "properties": {
                        "line1": {
                          "type": "string",
                          "example": "123 Main Street"
                        },
                        "line2": {
                          "type": "string",
                          "example": "Apartment 4B"
                        },
                        "city": {
                          "type": "string",
                          "example": "New York"
                        },
                        "stateProvince": {
                          "type": "string",
                          "example": "NY"
                        },
                        "postalCode": {
                          "type": "string",
                          "example": "10001"
                        },
                        "country": {
                          "type": "string",
                          "example": "United States"
                        },
                        "countryCode": {
                          "type": "string",
                          "example": "US"
                        }
                      }
                    },
                    "education": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Medical School A", "Medical School B"]
                    },
                    "awards": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "nullable": true,
                      "example": [
                        "Best Doctor Award 2020",
                        "Research Excellence Award"
                      ]
                    },
                    "affiliations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "nullable": true,
                      "example": ["Medical Association X", "Hospital Y"]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-18T05:23:25.231Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-18T05:23:25.231Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/doctors/{id}/statistic": {
      "get": {
        "tags": ["user"],
        "summary": "Get the specific doctor statistic.",
        "description": "Get the specific doctor statistic.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "doctor id for the requested profile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get the specific doctor statistic.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "100001"
                    },
                    "answerCounts": {
                      "type": "integer",
                      "example": 10
                    },
                    "thankedCounts": {
                      "type": "integer",
                      "example": 5
                    },
                    "beAgreedCounts": {
                      "type": "integer",
                      "example": 3
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/doctors": {
      "get": {
        "tags": ["user"],
        "summary": "Get doctors list.",
        "description": "Get doctors list",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "description": "Page number for pagination.",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            },
            "description": "Number of items to return per page.",
            "required": false
          },
          {
            "name": "specialty",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/MedicalSpecialtyType"
            },
            "description": "Filter doctors by medical specialty.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful get the doctors list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "100001"
                          },
                          "avatar": {
                            "type": "string",
                            "nullable": true,
                            "example": "avatar.jpg"
                          },
                          "firstName": {
                            "type": "string",
                            "example": "John"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "specialties": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "INTERNAL_MEDICINE",
                                "SURGERY",
                                "OBSTETRICS_AND_GYNECOLOGY",
                                "PEDIATRICS",
                                "OPHTHALMOLOGY",
                                "OTORHINOLARYNGOLOGY",
                                "DERMATOLOGY",
                                "PSYCHIATRY",
                                "DENTISTRY",
                                "ORTHOPEDICS",
                                "UROLOGY",
                                "NEUROLOGY",
                                "NEUROSURGERY",
                                "CARDIOLOGY",
                                "CARDIOTHORACIC_SURGERY",
                                "ONCOLOGY",
                                "NEPHROLOGY",
                                "PULMONOLOGY",
                                "GASTROENTEROLOGY",
                                "PULMONARY_MEDICINE"
                              ],
                              "example": ["INTERNAL_MEDICINE", "SURGERY"]
                            }
                          },
                          "gender": {
                            "type": "string",
                            "enum": ["MALE", "FEMALE", "NON_BINARY"],
                            "example": "MALE"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/records/weight": {
      "post": {
        "tags": ["record"],
        "summary": "Create single weight record.",
        "description": "Create single weight record.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "weightDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-06-18T05:23:25.231Z"
                  },
                  "weightValueKg": {
                    "type": "number",
                    "format": "double",
                    "example": 65.5
                  },
                  "weightNote": {
                    "type": "string",
                    "example": "Weight note."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful create single weight record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "79ed933e-22c2-4e9a-bf71-16086f54f3f2"
                    },
                    "weightDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T12:34:56Z"
                    },
                    "weightValueKg": {
                      "type": "number",
                      "format": "double",
                      "example": 65.5
                    },
                    "bodyMassIndex": {
                      "type": "number",
                      "format": "double",
                      "example": 24.7
                    },
                    "weightNote": {
                      "type": "string",
                      "nullable": true,
                      "example": "This is a weight note."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T08:12:34Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T14:56:12Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["record"],
        "summary": "Get weight records list.",
        "description": "Get weight records list.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "description": "Page number for pagination.",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            },
            "description": "Number of items to return per page.",
            "required": false
          },
          {
            "name": "targetPatientId",
            "in": "query",
            "description": "patient id for the requested profile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get the weight records list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "patientData": {
                          "type": "object",
                          "properties": {
                            "firstName": {
                              "type": "string",
                              "example": "John"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "birthDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "1990-01-01"
                            },
                            "gender": {
                              "type": "string",
                              "enum": ["MALE", "FEMALE", "OTHER"],
                              "example": "MALE"
                            }
                          }
                        },
                        "recordsData": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "12345"
                              },
                              "date": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-07-28"
                              },
                              "weightValueKg": {
                                "type": "number",
                                "format": "double",
                                "example": 75.5
                              },
                              "bodyMassIndex": {
                                "type": "number",
                                "format": "double",
                                "example": 23.1
                              }
                            }
                          },
                          "example": [
                            {
                              "id": "12345",
                              "date": "2023-07-28",
                              "weightValueKg": 75.5,
                              "bodyMassIndex": 23.1
                            }
                          ]
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "pages": {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "example": 1
                              },
                              "example": [1, 2, 3]
                            },
                            "totalPage": {
                              "type": "integer",
                              "example": 5
                            },
                            "currentPage": {
                              "type": "integer",
                              "example": 2
                            },
                            "prev": {
                              "type": "integer",
                              "example": 1
                            },
                            "next": {
                              "type": "integer",
                              "example": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/records/weight/{id}": {
      "patch": {
        "tags": ["record"],
        "summary": "Edit the specific weight record.",
        "description": "Edit the specific weight record.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "weight record id for the request",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "79ed933e-22c2-4e9a-bf71-16086f54f3f2"
                  },
                  "weightDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-27T12:34:56Z"
                  },
                  "weightValueKg": {
                    "type": "number",
                    "format": "double",
                    "example": 65.5
                  },
                  "weightNote": {
                    "type": "string",
                    "nullable": true,
                    "example": "This is a weight note."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful create single weight record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "79ed933e-22c2-4e9a-bf71-16086f54f3f2"
                    },
                    "weightDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T12:34:56Z"
                    },
                    "weightValueKg": {
                      "type": "number",
                      "format": "double",
                      "example": 65.5
                    },
                    "bodyMassIndex": {
                      "type": "number",
                      "format": "double",
                      "example": 24.7
                    },
                    "weightNote": {
                      "type": "string",
                      "nullable": true,
                      "example": "This is a weight note."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T08:12:34Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T14:56:12Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["record"],
        "summary": "Get the specific weight record.",
        "description": "Get the specific weight record.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Weight record id for the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetPatientId",
            "in": "query",
            "description": "patient id for the requested profile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful get single weight record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "df5ff2e5-9d76-42ca-acfb-688267229369"
                        },
                        "weightDate": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-07-27T12:34:56Z"
                        },
                        "weightValueKg": {
                          "type": "number",
                          "format": "double",
                          "example": 65.5
                        },
                        "bodyMassIndex": {
                          "type": "number",
                          "format": "double",
                          "example": 24.7
                        },
                        "weightNote": {
                          "type": "string",
                          "nullable": true,
                          "example": "This is a weight note."
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-07-27T08:12:34Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-07-27T14:56:12Z"
                        }
                      }
                    },
                    "recordOwner": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "birthDate": {
                          "type": "string",
                          "format": "date",
                          "example": "1990-01-01"
                        },
                        "gender": {
                          "type": "string",
                          "enum": ["Male", "Female", "Other"],
                          "example": "Male"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/records/blood-pressure": {
      "post": {
        "tags": ["record"],
        "summary": "Create single blood pressure record.",
        "description": "Create single blood pressure record.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bloodPressureDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-06-18T05:23:25.231Z"
                  },
                  "systolicBloodPressure": {
                    "type": "integer",
                    "example": 138
                  },
                  "diastolicBloodPressure": {
                    "type": "integer",
                    "example": 90
                  },
                  "heartBeat": {
                    "type": "integer",
                    "example": 78
                  },
                  "bloodPressureNote": {
                    "type": "string",
                    "example": "Blood pressure note."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful create single blood pressure record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "88ed933e-22c2-4e9a-bf71-16086f54f3f2"
                    },
                    "bloodPressureDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T12:34:56Z"
                    },
                    "systolicBloodPressure": {
                      "type": "integer",
                      "example": 138
                    },
                    "diastolicBloodPressure": {
                      "type": "integer",
                      "example": 90
                    },
                    "heartBeat": {
                      "type": "integer",
                      "example": 78
                    },
                    "bloodPressureNote": {
                      "type": "string",
                      "example": "Blood pressure note."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T08:12:34Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T14:56:12Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["record"],
        "summary": "Get blood pressure records list.",
        "description": "Get blood pressure records list.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "description": "Page number for pagination.",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            },
            "description": "Number of items to return per page.",
            "required": false
          },
          {
            "name": "targetPatientId",
            "in": "query",
            "description": "patient id for the requested profile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get blood pressure records list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "patientData": {
                          "type": "object",
                          "properties": {
                            "firstName": {
                              "type": "string",
                              "example": "John"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "birthDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "1990-01-01"
                            },
                            "gender": {
                              "type": "string",
                              "enum": ["MALE", "FEMALE", "OTHER"],
                              "example": "MALE"
                            }
                          }
                        },
                        "recordsData": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "12345"
                              },
                              "date": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-07-28"
                              },
                              "systolicBloodPressure": {
                                "type": "integer",
                                "example": 130
                              },
                              "diastolicBloodPressure": {
                                "type": "integer",
                                "example": 90
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "pages": {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "example": 1
                              },
                              "example": [1, 2, 3]
                            },
                            "totalPage": {
                              "type": "integer",
                              "example": 5
                            },
                            "currentPage": {
                              "type": "integer",
                              "example": 2
                            },
                            "prev": {
                              "type": "integer",
                              "example": 1
                            },
                            "next": {
                              "type": "integer",
                              "example": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/records/blood-pressure/{id}": {
      "patch": {
        "tags": ["record"],
        "summary": "Edit the specific blood pressure record.",
        "description": "Edit the specific blood pressure record.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Blood pressure record id for the request",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "88ed933e-22c2-4e9a-bf71-16086f54f3f2"
                  },
                  "bloodPressureDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-27T12:34:56Z"
                  },
                  "systolicBloodPressure": {
                    "type": "integer",
                    "example": 138
                  },
                  "diastolicBloodPressure": {
                    "type": "integer",
                    "example": 90
                  },
                  "heartBeat": {
                    "type": "integer",
                    "example": 78
                  },
                  "bloodPressureNote": {
                    "type": "string",
                    "example": "Blood pressure note."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful edit single blood pressure record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "88ed933e-22c2-4e9a-bf71-16086f54f3f2"
                    },
                    "bloodPressureDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T12:34:56Z"
                    },
                    "systolicBloodPressure": {
                      "type": "integer",
                      "example": 138
                    },
                    "diastolicBloodPressure": {
                      "type": "integer",
                      "example": 90
                    },
                    "heartBeat": {
                      "type": "integer",
                      "example": 78
                    },
                    "bloodPressureNote": {
                      "type": "string",
                      "example": "Blood pressure note."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T08:12:34Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T14:56:12Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["record"],
        "summary": "Get the specific blood pressure record.",
        "description": "Get the specific blood pressure record.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Weight record id for the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetPatientId",
            "in": "query",
            "description": "patient id for the requested profile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get single blood pressure record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "eb5ff2e5-9d76-42ca-acfb-688267229369"
                        },
                        "bloodPressureDate": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-07-27T12:34:56Z"
                        },
                        "systolicBloodPressure": {
                          "type": "integer",
                          "example": 138
                        },
                        "diastolicBloodPressure": {
                          "type": "integer",
                          "example": 90
                        },
                        "heartBeat": {
                          "type": "integer",
                          "example": 78
                        },
                        "bloodPressureNote": {
                          "type": "string",
                          "example": "Blood pressure note."
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-07-27T08:12:34Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-07-27T14:56:12Z"
                        }
                      }
                    },
                    "recordOwner": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "birthDate": {
                          "type": "string",
                          "format": "date",
                          "example": "1990-01-01"
                        },
                        "gender": {
                          "type": "string",
                          "enum": ["Male", "Female", "Other"],
                          "example": "Male"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/records/blood-sugar": {
      "post": {
        "tags": ["record"],
        "summary": "Create single blood sugar record.",
        "description": "Create single blood sugar record.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bloodSugarDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-06-18T05:23:25.231Z"
                  },
                  "bloodSugarValue": {
                    "type": "number",
                    "format": "double",
                    "example": 100.0
                  },
                  "bloodSugarNote": {
                    "type": "string",
                    "example": "Blood pressure note."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful create single blood sugar record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ffed933e-22c2-4e9a-bf71-16086f54f3f2"
                    },
                    "bloodSugarDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T12:34:56Z"
                    },
                    "bloodSugarValue": {
                      "type": "number",
                      "format": "double",
                      "example": 100.0
                    },
                    "bloodSugarNote": {
                      "type": "string",
                      "example": "Blood pressure note."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T08:12:34Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T14:56:12Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["record"],
        "summary": "Get blood sugar records list.",
        "description": "Get blood sugar records list.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "description": "Page number for pagination.",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            },
            "description": "Number of items to return per page.",
            "required": false
          },
          {
            "name": "targetPatientId",
            "in": "query",
            "description": "patient id for the requested profile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get blood sugar records list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "patientData": {
                          "type": "object",
                          "properties": {
                            "firstName": {
                              "type": "string",
                              "example": "John"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "birthDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "1990-01-01"
                            },
                            "gender": {
                              "type": "string",
                              "enum": ["MALE", "FEMALE", "OTHER"],
                              "example": "MALE"
                            }
                          }
                        },
                        "recordsData": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "12345"
                              },
                              "date": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-07-28"
                              },
                              "bloodSugarValue": {
                                "type": "number",
                                "format": "double",
                                "example": 100.0
                              },
                              "bloodSugarType": {
                                "type": "string",
                                "enum": [
                                  "FAST_PLASMA_GLUCOSE",
                                  "POSTPRANDIAL_PLASMA_GLUCOS"
                                ],
                                "example": "FAST_PLASMA_GLUCOSE"
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "pages": {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "example": 1
                              },
                              "example": [1, 2, 3]
                            },
                            "totalPage": {
                              "type": "integer",
                              "example": 5
                            },
                            "currentPage": {
                              "type": "integer",
                              "example": 2
                            },
                            "prev": {
                              "type": "integer",
                              "example": 1
                            },
                            "next": {
                              "type": "integer",
                              "example": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/records/blood-sugar/{id}": {
      "patch": {
        "tags": ["record"],
        "summary": "Edit the specific blood sugar record.",
        "description": "Edit the specific blood sugar record.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Blood sugar record id for the request",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "55ge933e-22c2-4e9a-bf71-16086f54f3f2"
                  },
                  "bloodSugarDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-27T12:34:56Z"
                  },
                  "bloodSugarValue": {
                    "type": "number",
                    "format": "double",
                    "example": 100.0
                  },
                  "bloodSugarNote": {
                    "type": "string",
                    "example": "Blood sugar note."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful edit single blood sugar record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "55ge933e-22c2-4e9a-bf71-16086f54f3f2"
                    },
                    "bloodSugarDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T12:34:56Z"
                    },
                    "bloodSugarValue": {
                      "type": "number",
                      "format": "double",
                      "example": 100.0
                    },
                    "bloodSugarType": {
                      "type": "string",
                      "enum": [
                        "FAST_PLASMA_GLUCOSE",
                        "POSTPRANDIAL_PLASMA_GLUCOS"
                      ],
                      "example": "FAST_PLASMA_GLUCOSE"
                    },
                    "bloodSugarNote": {
                      "type": "string",
                      "example": "Blood sugar note."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T08:12:34Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T14:56:12Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["record"],
        "summary": "Get the specific blood sugar record.",
        "description": "Get the specific blood sugar record.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Blood sugar record id for the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetPatientId",
            "in": "query",
            "description": "patient id for the requested profile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful get single blood sugar record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "55ge933e-22c2-4e9a-bf71-16086f54f3f2"
                        },
                        "bloodSugarDate": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-07-27T12:34:56Z"
                        },
                        "bloodSugarValue": {
                          "type": "number",
                          "format": "double",
                          "example": 100.0
                        },
                        "bloodSugarType": {
                          "type": "string",
                          "enum": [
                            "FAST_PLASMA_GLUCOSE",
                            "POSTPRANDIAL_PLASMA_GLUCOS"
                          ],
                          "example": "FAST_PLASMA_GLUCOSE"
                        },
                        "bloodSugarNote": {
                          "type": "string",
                          "example": "Blood sugar note."
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-07-27T08:12:34Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-07-27T14:56:12Z"
                        }
                      }
                    },
                    "recordOwner": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "birthDate": {
                          "type": "string",
                          "format": "date",
                          "example": "1990-01-01"
                        },
                        "gender": {
                          "type": "string",
                          "enum": ["Male", "Female", "Other"],
                          "example": "Male"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/consultations": {
      "post": {
        "tags": ["consultation"],
        "summary": "Create a consult appointment.",
        "description": "Create a consult appointment.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "doctorTimeSlotId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ca901c4c-27f7-439d-bd4a-290af3d2db74"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patient successfully create a consult appointment.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ca901c4c-27f7-439d-bd4a-290af3d2db74"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/consultations/time-slot": {
      "post": {
        "tags": ["consultation"],
        "summary": "Create a doctor time slot.",
        "description": "Create a doctor time slot.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-27T12:30:56Z"
                  },
                  "endAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-27T13:00:56Z"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Doctor successfully create a doctor time slot.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ca901c4c-27f7-439d-bd4a-290af3d2db74"
                  },
                  "doctorId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "75c5f3ea-3935-4d66-be06-d5f830a13b7f"
                  },
                  "startAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-27T12:30:56Z"
                  },
                  "endAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-27T13:00:56Z"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-06-18T05:23:25.231Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-06-18T05:23:25.231Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/consultations/time-slot/{id}": {
      "patch": {
        "tags": ["consultation"],
        "summary": "Doctor edits own time-slot.",
        "description": "Doctor edits own time-slot.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Time slot id for the request",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "79ed933e-22c2-4e9a-bf71-16086f54f3f2"
                  },
                  "startAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-27T12:30:56Z"
                  },
                  "endAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-27T13:00:56Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Doctor successfully edits own time-slot.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "79ed933e-22c2-4e9a-bf71-16086f54f3f2"
                    },
                    "startAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-28T12:34:56Z"
                    },
                    "endAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-28T13:04:56Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T14:56:12Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["consultation"],
        "summary": "Doctor deletes own time-slot.",
        "description": "Doctor deletes own time-slot.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Time slot id for the request",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "79ed933e-22c2-4e9a-bf71-16086f54f3f2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Doctor successfully deletes own time-slot.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deletedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T14:56:12Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": ["notification"],
        "summary": "Get notification list.",
        "description": "Get notification list.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "description": "Page number for pagination.",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            },
            "description": "Number of items to return per page.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get notification list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "notification_id_123"
                          },
                          "title": {
                            "type": "string",
                            "example": "New Notification"
                          },
                          "isRead": {
                            "type": "boolean",
                            "example": true
                          },
                          "content": {
                            "type": "string",
                            "example": "This is the content of the notification."
                          },
                          "notificationType": {
                            "type": "string",
                            "enum": [
                              "UPCOMING_APPOINTMENT",
                              "CANCEL_APPOINTMENT",
                              "CREATE_APPOINTMENT",
                              "HEALTH_GOAL_NOTIFICATION",
                              "GET_ANSWER_NOTIFICATION",
                              "THANK_YOU_NOTIFICATION",
                              "AGREED_NOTIFICATION",
                              "CANCEL_OVERTIME_PENDING_GOAL"
                            ],
                            "example": "UPCOMING_APPOINTMENT"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-08-02T12:34:56Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-08-02T12:34:56Z"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "pages": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "example": 1
                          }
                        },
                        "totalPage": {
                          "type": "number",
                          "example": 5
                        },
                        "currentPage": {
                          "type": "number",
                          "example": 2
                        },
                        "prev": {
                          "type": "number",
                          "example": 1
                        },
                        "next": {
                          "type": "number",
                          "example": 3
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/hints": {
      "get": {
        "tags": ["notification"],
        "summary": "Get notification hints.",
        "description": "Get notification hints.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get notification hints.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasUnReadNotification": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/read-all": {
      "patch": {
        "tags": ["notification"],
        "summary": "Read all notifications.",
        "description": "Read all notifications.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read all notifications.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updatedNotifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "notification_id_123"
                          },
                          "title": {
                            "type": "string",
                            "example": "New Notification"
                          },
                          "content": {
                            "type": "string",
                            "example": "This is the content of the notification."
                          },
                          "isRead": {
                            "type": "boolean",
                            "example": true
                          },
                          "notificationType": {
                            "type": "string",
                            "enum": [
                              "UPCOMING_APPOINTMENT",
                              "CANCEL_APPOINTMENT",
                              "CREATE_APPOINTMENT",
                              "HEALTH_GOAL_NOTIFICATION",
                              "GET_ANSWER_NOTIFICATION",
                              "THANK_YOU_NOTIFICATION",
                              "AGREED_NOTIFICATION",
                              "CANCEL_OVERTIME_PENDING_GOAL"
                            ],
                            "example": "UPCOMING_APPOINTMENT"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-08-02T12:34:56Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-08-02T12:34:56Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/all": {
      "delete": {
        "tags": ["notification"],
        "summary": "Delete all notifications.",
        "description": "Delete all notifications.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully delete all notifications.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deletedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T14:56:12Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}": {
      "delete": {
        "tags": ["notification"],
        "summary": "Delete a notification.",
        "description": "Delete a notification.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Notification id for the request",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notificationId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "79ed933e-22c2-4e9a-bf71-16086f54f3f2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully delete a notification.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deletedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-27T14:56:12Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/questions/answers/{id}": {
      "get": {
        "tags": ["question"],
        "summary": "Get a health goal.",
        "description": "Get a health goal.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Health goal id for the request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Doctor successfully get an answer's details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "questionId": {
                      "type": "string",
                      "example": "12345"
                    },
                    "answerId": {
                      "type": "string",
                      "example": "67890"
                    },
                    "answerContent": {
                      "type": "string",
                      "example": "This is the answer content."
                    },
                    "appreciationData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "nullable": true,
                            "example": "Thank you for the answer!"
                          },
                          "patientId": {
                            "type": "string",
                            "example": "abc123"
                          },
                          "patientAge": {
                            "type": "integer",
                            "example": 30
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-08-03T12:34:56Z"
                          }
                        }
                      }
                    },
                    "agreementData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "nullable": true,
                            "example": "I agree with this answer."
                          },
                          "agreedDoctorId": {
                            "type": "string",
                            "example": "xyz789"
                          },
                          "agreedDoctorFirstName": {
                            "type": "string",
                            "example": "John"
                          },
                          "agreedDoctorLastName": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-08-03T12:45:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/questions/answers": {
      "get": {
        "tags": ["question"],
        "summary": "Get answers list.",
        "description": "Get answers list.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "description": "Page number for pagination.",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            },
            "description": "Number of items to return per page.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Doctor successfully get answers list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalAnswerCounts": {
                      "type": "number",
                      "example": 10
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "12345"
                          },
                          "content": {
                            "type": "string",
                            "example": "This is the answer content."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-08-03T12:34:56Z"
                          },
                          "thankCounts": {
                            "type": "number",
                            "example": 5
                          },
                          "agreeCounts": {
                            "type": "number",
                            "example": 3
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "pages": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "example": [1, 2, 3]
                        },
                        "totalPage": {
                          "type": "number",
                          "example": 3
                        },
                        "currentPage": {
                          "type": "number",
                          "example": 2
                        },
                        "prev": {
                          "type": "number",
                          "example": 1
                        },
                        "next": {
                          "type": "number",
                          "example": 3
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/goals/{id}": {
      "get": {
        "tags": ["goal"],
        "summary": "Get an answer's details.",
        "description": "Get an answer's details.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "__JWT_TOKEN__"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Answer id for the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetPatientId",
            "in": "query",
            "description": "patient id for the requested profile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get a health goal.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345"
                    },
                    "bloodPressureCurrentValue": {
                      "type": "object",
                      "properties": {
                        "systolicBloodPressure": {
                          "type": "integer",
                          "example": 130
                        },
                        "diastolicBloodPressure": {
                          "type": "integer",
                          "example": 80
                        }
                      },
                      "nullable": true
                    },
                    "bloodSugarCurrentValue": {
                      "type": "number",
                      "format": "double",
                      "example": 100.0
                    },
                    "bloodSugarCurrentType": {
                      "type": "string",
                      "enum": [
                        "FAST_PLASMA_GLUCOSE",
                        "POSTPRANDIAL_PLASMA_GLUCOS"
                      ],
                      "example": "FAST_PLASMA_GLUCOSE"
                    },
                    "bloodSugarTargetValue": {
                      "type": "number",
                      "format": "double",
                      "example": 100.0
                    },
                    "bloodSugarTargetType": {
                      "type": "string",
                      "enum": [
                        "FAST_PLASMA_GLUCOSE",
                        "POSTPRANDIAL_PLASMA_GLUCOS"
                      ],
                      "example": "FAST_PLASMA_GLUCOSE"
                    },
                    "glycatedHemoglobinCurrentValue": {
                      "type": "number",
                      "format": "double",
                      "example": 5.68
                    },
                    "glycatedHemoglobinTargetValue": {
                      "type": "number",
                      "format": "double",
                      "example": 5.68
                    },
                    "weightCurrentValue": {
                      "type": "number",
                      "format": "double",
                      "example": 65.5
                    },
                    "weightTargetValue": {
                      "type": "number",
                      "format": "double",
                      "example": 65.5
                    },
                    "bodyMassIndexCurrentValue": {
                      "type": "number",
                      "format": "double",
                      "example": 18.5
                    },
                    "bodyMassIndexTargetValue": {
                      "type": "number",
                      "format": "double",
                      "example": 18.5
                    },
                    "startAt": {
                      "type": "string",
                      "example": "2023-06-18T05:23:25.231Z"
                    },
                    "endAt": {
                      "type": "string",
                      "example": "2023-07-18T05:23:25.231Z"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "IN_PROGRESS",
                        "ALL_GOALS_ACHIEVED",
                        "PARTIAL_GOALS_ACHIEVED",
                        "GOAL_FAILED",
                        "PENDING",
                        "REJECTED"
                      ],
                      "example": "IN_PROGRESS"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "bloodPressure": {
                          "type": "object",
                          "properties": {
                            "currentValue": {
                              "type": "object",
                              "properties": {
                                "systolicBloodPressure": {
                                  "type": "integer",
                                  "nullable": true,
                                  "example": 130
                                },
                                "diastolicBloodPressure": {
                                  "type": "integer",
                                  "nullable": true,
                                  "example": 80
                                }
                              },
                              "nullable": true
                            },
                            "goalAchieved": {
                              "type": "boolean",
                              "example": true
                            },
                            "currentValueDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2023-06-18T05:23:25.231Z"
                            }
                          }
                        },
                        "bloodSugar": {
                          "type": "object",
                          "properties": {
                            "currentValue": {
                              "type": "number",
                              "format": "double",
                              "example": 100.0,
                              "nullable": true
                            },
                            "goalAchieved": {
                              "type": "boolean",
                              "example": false
                            }
                          },
                          "currentValueDate": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-06-18T05:23:25.231Z"
                          }
                        }
                      },
                      "glycatedHemoglobin": {
                        "type": "object",
                        "properties": {
                          "currentValue": {
                            "type": "number",
                            "format": "double",
                            "example": 5.62,
                            "nullable": true
                          },
                          "goalAchieved": {
                            "type": "boolean",
                            "example": true
                          },
                          "currentValueDate": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-06-18T05:23:25.231Z"
                          }
                        }
                      },
                      "weight": {
                        "type": "object",
                        "properties": {
                          "currentValue": {
                            "type": "number",
                            "format": "double",
                            "example": "56.8",
                            "nullable": true
                          },
                          "goalAchieved": {
                            "type": "boolean",
                            "example": true
                          },
                          "currentValueDate": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-06-18T05:23:25.231Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "User": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "df5ff2e5-9d76-42ca-acfb-688267229369"
            },
            "displayName": {
              "type": "string",
              "example": "Jimmy"
            },
            "email": {
              "type": "string",
              "example": "test@test.com"
            },
            "role": {
              "type": "string",
              "enum": ["PATIENT", "DOCTOR"],
              "example": "PATIENT"
            }
          },
          "required": ["id", "email", "displayName", "role"]
        },
        "UserInput": {
          "properties": {
            "email": {
              "type": "string",
              "example": "test@test.com"
            },
            "password": {
              "type": "string",
              "example": "test"
            }
          },
          "required": ["email", "password"]
        }
      }
    }
  }
}
